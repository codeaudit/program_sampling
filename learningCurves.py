import numpy as np
import matplotlib.pyplot as plot

sort5 = [[1.0,1.0, 0.74125, 0.4925, 0.32625, 0.1975, 0.045, 0.01125, 0.045, 0.0, 0.0, 0.0, 0.0, 0.0],
         [1.0,1.0,0.843333333333,0.58875,0.53,0.23625,0.197083333333,0.1775,0.0795833333333,0.0208333333333,0.0208333333333,0.0404166666667,0.0404166666667,0.0208333333333],
         [1.0,1.0,0.893333333333,0.754666666667,0.669333333333,0.626666666667,0.573333333333,0.509333333333,0.52,0.477333333333,0.477333333333,0.477333333333,0.466666666667,0.466666666667],
         [1.0,1.0,0.2248,0.1604,0.0664,0.0312,0.0192,0.0048,0.0016,0.0032,0.0032,0.0,0.0,0.0],
         [1.0,1.0,0.856,0.736,0.616,0.556,0.568,0.472,0.46,0.4,0.424,0.4,0.4,0.4],
         [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0]]

sort8 = [[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
         [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
         [1.0,1.0,0.8992,0.7984,0.72,0.5856,0.552,0.4624,0.4512,0.4512,0.44,0.44,0.4512,0.44],
         [1.0,1.0,0.82,0.52,0.46,0.34,0.18,0.14,0.06,0.02,0.0,0.0,0.02,0.0],
         [1.0,1.0,0.637916666667,0.452916666667,0.2525,0.161666666667,0.0645833333333,0.0333333333333,0.0395833333333,0.0270833333333,0.0270833333333,0.0208333333333,0.0270833333333,0.0208333333333],
         [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
         [1.0,1.0,0.8432,0.608,0.5688,0.3532,0.1964,0.0396,0.0592,0.118,0.0592,0.02,0.0396,0.02],
         [1.0,1.0,0.8,0.52,0.54,0.28,0.12,0.1,0.04,0.02,0.0,0.0,0.0,0.0],
         [1.0,1.0,0.928979591837,0.798775510204,0.715918367347,0.562040816327,0.491020408163,0.455510204082,0.443673469388,0.42,0.42,0.408163265306,0.408163265306,0.408163265306]]

sort11 = [
    [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
    [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
    [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
    [1.0,1.0,0.79,0.4328,0.1812,0.1048,0.1124,0.0844,0.01,0.0184,0.0012,0.0,0.0,0.0],
    [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
    [1.0,0.785714285714,0.571428571429,0.417142857143,0.228571428571,0.148571428571,0.08,0.0114285714286,0.0571428571429,0.0228571428571,0.0114285714286,0.0114285714286,0.0,0.0],
    [1.0,0.776,0.5756,0.2512,0.108,0.108,0.054,0.018,0.006,0.012,0.006,0.0,0.0,0.0],
    [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
    [1.0,1.0,0.962,0.8708,0.7416,0.7112,0.7416,0.6428,0.6276,0.6276,0.6276,0.62,0.62,0.62],
    [1.0,1.0,0.961363636364,0.83,0.760454545455,0.745,0.683181818182,0.652272727273,0.636818181818,0.629090909091,0.644545454545,0.613636363636,0.613636363636,0.613636363636]]

reverse3 = [[ 1.0 , 0.9584 , 0.936 , 0.9248 , 0.92 , 0.9204 , 0.92 , 0.92 , 0.92 , 0.92 , 0.92 , 0.92 , 0.92 , 0.92 , ],
            [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
            [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
            [ 1.0 , 0.992 , 0.9864 , 0.988 , 0.9864 , 0.982 , 0.982 , 0.9832 , 0.982 , 0.9808 , 0.9824 , 0.9824 , 0.9828 , 0.9816 , ],
            [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
            [ 0.979591836735 , 0.979591836735 , 1.0 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , 0.979591836735 , ],
            [ 1.0 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , 0.74 , ],
            [ 1.0 , 0.9908 , 0.9848 , 0.9832 , 0.984 , 0.9832 , 0.9824 , 0.984 , 0.9812 , 0.9816 , 0.9816 , 0.9812 , 0.9824 , 0.9808 , ]]
reverse5 = [[ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
            [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
            [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
            [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
            [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
[ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ]]

count1 = [[ 0.46 , 0.245714285714 , 0.247142857143 , 0.177142857143 , 0.182857142857 , 0.13 , 0.141428571429 , 0.104285714286 , 0.142857142857 , 0.128571428571 , 0.102857142857 , 0.0771428571429 , 0.118571428571 , 0.0757142857143 , ],
]
count3 = [
    [ 0.90625 , 0.735833333333 , 0.649166666667 , 0.56875 , 0.527083333333 , 0.468333333333 , 0.50625 , 0.385833333333 , 0.420416666667 , 0.443333333333 , 0.392916666667 , 0.402916666667 , 0.403333333333 , 0.427916666667 , ],
    [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
    [ 1.0 , 0.8404 , 0.8692 , 0.7724 , 0.7596 , 0.7768 , 0.7232 , 0.7072 , 0.7632 , 0.6828 , 0.7012 , 0.7692 , 0.754 , 0.72 , ],
    [ 0.895744680851 , 0.749787234043 , 0.629361702128 , 0.547234042553 , 0.531914893617 , 0.467234042553 , 0.394893617021 , 0.416170212766 , 0.417446808511 , 0.398723404255 , 0.408085106383 , 0.409787234043 , 0.370212765957 , 0.35914893617 , ],
    [ 1.0 , 0.911739130435 , 0.848260869565 , 0.780869565217 , 0.728260869565 , 0.717826086957 , 0.705217391304 , 0.565652173913 , 0.663043478261 , 0.673913043478 , 0.587826086957 , 0.655217391304 , 0.606956521739 , 0.638260869565 , ]
]
count5 = [
    [ 1.0 , 1.0 , 0.981578947368 , 0.981578947368 , 0.965789473684 , 0.957894736842 , 0.965789473684 , 0.968421052632 , 0.957894736842 , 0.963157894737 , 0.963157894737 , 0.947368421053 , 0.965789473684 , 0.971052631579 , ],
    [ 1.0 , 1.0 , 0.9944 , 0.9944 , 0.9936 , 0.9888 , 0.9904 , 0.9872 , 0.984 , 0.9864 , 0.9896 , 0.9848 , 0.9848 , 0.984 , ],
    [ 0.997142857143 , 0.974761904762 , 0.927619047619 , 0.921904761905 , 0.907619047619 , 0.906666666667 , 0.908095238095 , 0.910952380952 , 0.868571428571 , 0.885238095238 , 0.889047619048 , 0.873333333333 , 0.897142857143 , 0.874761904762 , ],
    [ 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , ],
]

plot.figure(1)
plot.ylabel("Fraction correct")
plot.subplot(321)
for s,e,c in zip([sort5,sort8,sort11],[5,8,11],['r','g','b']):
    s = np.average(np.array(s),axis = 0)    
    plot.plot(np.linspace(4,14,num = 11),s[3:],c,label = "%d examples"%e)
plot.legend(fontsize=8)
plot.ylim([0,1.1])
plot.ylabel("Sort accuracy")

plot.subplot(323)
for s,e,c in zip([count1,count3,count5],[1,3,5],['r','g','b']):
    s = np.average(np.array(s),axis = 0)    
    plot.plot(np.linspace(4,14,num = 11),s[3:],c,label = '%d examples'%e)
plot.legend(fontsize=8)
plot.ylim([0,1.1])
plot.xlabel("Testing list length")
plot.ylabel("Count accuracy")


plot.subplot(325)
for s,e,c in zip([reverse3,reverse5],[3,5],['r','g','b']):
    s = np.average(np.array(s),axis = 0)    
    plot.plot(np.linspace(4,14,num = 11),s[3:],c,label = '%d examples'%e)
plot.legend(fontsize=8)
plot.ylim([0,1.1])
plot.xlabel("Testing list length")
plot.ylabel("Reverse accuracy")

ax = plot.subplot(326)
ax.axis('off')
plot.xlabel("Posterior sample")
plot.figtext(0.5,0.5,'(length (filter (= (head X)) (tail X)))',family = 'monospace')
plot.figtext(0.48,0.66,'(if (<= (+1 0) (length X))\n   X\n   (append (recurse (filter (<= (head X))\n                            (tail X)))\n           (list (head X))\n           (recurse (filter (>= (head X))\n                            (tail X)))))',family = 'monospace')
plot.figtext(0.5,0.15,'(if (<= (+1 0) (length X))\n    X\n    (append (recurse (tail X))\n            (list (head X))))',family = 'monospace')

plot.figtext(0.6,0.05,"Posterior sample")

plot.show()
